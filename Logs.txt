NOTE: We initially construct the code in our independent laptop without uploading it on GitHub. Since this is our first time using GitHub, we accidentally made the editions on fork instead of main. That's why all the commits seem concentrated in the last week.

2023.2.4 meeting time: 26 mins
The first meeting for Itreration 1, the first big user story we decided to work on is the course enrollment At this iteration, we need a database, GUI for course enrollment user story, the GUI framework will be responsible by Zhige Xia
estimated time: 12hrs
the code for course enrollment, add course, remove course, review course description, show a list of course will be responsible by Haocheng, Wenxu, and Tao
estimated time: 12hrs

2023.2.5 Code Design Time: 2 hours 16 mins design course class by Haocheng
We first of all create a random course list. At this stage, we want courses to be stored in one class with the attributes of course name, course price, course description Note: the attributes are set to be private since we don't want users to access each other's info
create a No-arg constructer that sets the course's name and description as none, and sets the price as -1 which indicates for later creation of course object, we are able to know that whether the object is created successfully

showEverything method is created for course class, which displays name, description and price
Test class is created to test whether showEverything method is working
course aerobic = new course("aerobic",1000,"enhace cardio-pulmonary function"); aerobic.showEverything();
output: [name=aerobic, price=1000, desc=enhace cardio-pulmonary function] so the funtion work

2023.2.6 First version of the GUI framework model trial run by Zhige Xia
estimated time: 30mins
actual code design time: 1hr

2023.2.7 We edit and revise several parts of Planning Document
         We write the basic code for class, membership, and inventory, and make sure the code is working by testing the methods  
         We defince some general methods(funcationality) applying in membership class and coach class
         
2023.2.8 The first version of the interface model that can be used has been completed by Zhige Xia
         The interface includes the most basic GUI design, a title and two buttons, with the option of administrator login or user login
         The Administrator login interface includes the most basic GUI design, two input boxes to enter the account password

GymManageMainFrame.java first version took 2 hours 20 mins in 2023.2.6 and 2023.2.7
LoginFrame.java first version took 1 hours 14 mins
UserLoginFrame.java first version took 1 hours 31 mins
MainFrame.java just be create
Administrator login interface is temporarily set to account admin, password 123456, all other passwords will directly close the page, the administrator interface is not set yet.
The user login interface is basically made with reference to the administrator login interface, set up registration, login and change password three buttons, registration and change passwordevent temporarily not designed, as not designed for registration, so the login temporarily not set up account, plan to use mysql database to connect data in the future, so the login temporary account only need to enter the password 123456 you can directly enter the system home page

We decide to implement another big user story, since we face some difficulties on creating a database for courses. Now, we want to implement membership management

WenXu will be responsible for the inner structure of membership management. time estimated: 4hrs
Write code of membership, more details about implementation. show the Member's Physical Quality, and information. The user can type their name and body fat rate, then the card can show everything about the user. Also, check the remaining funds, user can either add money or use the fund. This system took 3h.Upload the planning document, adding another two big stories index. 
Actual design time taken: 3hours 

Add a test class of membership.

We decide to do some extra work for iteration 2. Tao Chen start to design inventory class. Time estimated: 4hours
We test the inventory class and membership class. 
Actual design time: 2hours 39 mins

2023.2.9 
planning document with all the user stories are revised and uploaded.
Complete the UML of inventory class and membership class

The planning document is finalized, the implemented storeis are mentioned at the back

Architecture sketch is completed and uploaded by using MVC.

Write comment for membership class, explain the functions of every methods, add wiki file.

2023.2.16
Meet up with team 1 as their client team 
supposed to meet at 6pm (team 1 show up at 6:10)

Participants: 
Team 1: Zohair Ahmed, Ammad Qureshi, Nicholas Lachhman
Team 2 (our team): Haocheng Sun, Tao Chen, Wenxu Ye

meeting duration: 32mins

Meeting summary:
Team 1 is doing a book searching software where users can search a book, download a book and create a book club where other users can join.

Team 2 gives 3 suggestions in total.
The first one is to create a new user story for adding a book. To be specific, the user can add a book into the database. In this way, every user can also be a distributer.
Second suggestion is searching for clubs by features of this club.
Third suggestion is adding favorite books in the profile. When searching another user, the user's favorites should be shown. 

